<div id="ticket">
  <header>
    <h1><%= @project.name %></h1>
  </header>
  <header>
    <h2><%= @ticket.name %></h2>
    <ul class="actions">
      <% if policy(@ticket).update? %>
        <li>
          <%= link_to("Edit Ticket", [:edit, @project, @ticket], class: "edit") %>
        </li>
      <% end %>
      <% if policy(@ticket).destroy? %>
        <li><%= link_to("Delete Ticket", [@project, @ticket], method: :delete,
        data: { confirm: "Are you sure you want to delete this ticket?"},
        class: "delete") %></li>
      <% end %>
    </ul>
  </header>
  <table id="attributes">
    <tr>
      <th>Author:</th>
      <td><%= @ticket.author.email %></td>
    </tr>

    <tr>
      <th>Created:</th>
      <!-- time_ago_in_words is a method in ActionView -->
      <td><%= time_ago_in_words(@ticket.created_at) %> ago</td>
    </tr>

    <% if @ticket.state.present? %>
      <tr>
        <th>State:</th>
        <td><%= render @ticket.state %></td>
      </tr>
    <% end %>

    <% if @ticket.tags.any? %>
      <tr id="tags">
        <th>Tags:</th>
        <!-- render looks for a partial named after the class name of the object -->
        <!-- here is tags/_tag.html.erb -->
        <td><%= render @ticket.tags, ticket: @ticket %></td>
      </tr>
    <% end %>

    <tr id="watchers">
      <th>Watchers:</th>
      <td>
        <%= toggle_watching_button(@ticket) %><br />
        <!-- to_sentence turn all emails into one proper sentence -->
        <%= @ticket.watchers.map(&:email).to_sentence %>
      </td>
    </tr>
  </table>
  <!-- simple_format converts line breaks in description to <br> -->
  <%= simple_format(@ticket.description) %>

  <% if @ticket.attachments.any? %>
    <h4>Attachments</h4>
    <div class="attachments">
      <% @ticket.attachments.each do |attachment| %>
        <p>
        <!-- attachment.file is only a string, CarrierWave turns it to an object you can call methods on -->
        <!-- blue link_to is given by Ruby on Rails snippets package installed through Package Control -->
        <!-- currently it's installed through manually pulling from Github, so it's white now -->
          <%= link_to File.basename(attachment.file.url), attachment_path(attachment) %>,
          (<%= number_to_human_size(attachment.file.size) %>)
        </p>
      <% end %>
    </div>
  <% end %>
</div>

<header>
  <h3>Comments</h3>
</header>

<div id="comments">
<!-- persisted retrieves the comments in the database, we do that because we @comment = @ticket.comments.build in CommentsController#show, which is unpersisted. -->
  <% if @ticket.comments.persisted.any? %>
  <!-- rails will render a partial for every element in the collection and look for a partial using the first object's class name -->
    <%= render @ticket.comments.persisted %>
  <% else %>
    <p>There are no comments for this ticket.</p>
  <% end %>
</div>

<% if policy(@comment).create? %>
  <%= render "comments/form", ticket: @ticket, comment: @comment %>
<% end %>
